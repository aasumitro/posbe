// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IPassword is an autogenerated mock type for the IPassword type
type IPassword struct {
	mock.Mock
}

// ComparePasswords provides a mock function with given fields:
func (_m *IPassword) ComparePasswords() (bool, error) {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HashPassword provides a mock function with given fields:
func (_m *IPassword) HashPassword() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIPassword interface {
	mock.TestingT
	Cleanup(func())
}

// NewIPassword creates a new instance of IPassword. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIPassword(t mockConstructorTestingTNewIPassword) *IPassword {
	mock := &IPassword{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
